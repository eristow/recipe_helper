services:
  frontend:
    container_name: frontend

    image: recipe_helper_frontend

    build:
      context: ./frontend
      dockerfile: Dockerfile

    depends_on:
      backend:
        condition: service_healthy

    ports:
      - '3000:3000'

    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules

    command: pnpm run dev

    healthcheck:
      test: ['CMD-SHELL', 'curl localhost:3000']
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 15s

  backend:
    container_name: backend

    image: recipe_helper_backend

    build:
      context: ./backend
      dockerfile: Dockerfile

    depends_on:
      database:
        condition: service_healthy
      ollama:
        condition: service_healthy

    environment:
      - OLLAMA_HOST=http://ollama:11434

    ports:
      - '8080:8080'

    volumes:
      - ./backend:/backend

    command: sh -c "go install github.com/air-verse/air@v1.60.0 &&
      air -c .air.toml"

    healthcheck:
      test: ['CMD-SHELL', 'curl localhost:8080']
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 15s

  database:
    container_name: database

    image: recipe_helper_database

    build:
      context: ./database
      dockerfile: Dockerfile

    env_file:
      - ./database/.env

    ports:
      - '5432:5432'

    volumes:
      - ./database:/database

    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 15s

  ollama:
    container_name: ollama

    image: recipe_helper_ollama

    build:
      context: ./ollama
      dockerfile: Dockerfile

    ports:
      - '11434:11434'

    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

    command: ollama serve && ollama run mistral

    healthcheck:
      test: ['CMD-SHELL', 'curl localhost:11434']
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 15s
